{"version":3,"file":"thumbnail.directive.js","sourceRoot":"","sources":["../../src/directives/thumbnail.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\nimport { FileItem } from '../services/fileItem.model';\n\n/**\n * Transforms a node into a thumbnail zone.\n */\n@Directive({\n    selector: '[ngxThumbnail]',\n    exportAs: 'ngxThumbnail'\n})\nexport class NgxThumbnailDirective implements OnInit {\n\n    @Input('ngxThumbnail') fileItem: FileItem;\n\n    constructor(private renderer: Renderer2, private el: ElementRef) { }\n\n    ngOnInit() {\n        // must be used only with image file\n        if (this.fileItem.file.type.indexOf('image/jpeg') !== 0 &&\n            this.fileItem.file.type.indexOf('image/png') !== 0) {\n            return\n        } else {\n\n            const imgEl = this.renderer.createElement('img');\n            this.renderer.appendChild(this.el.nativeElement, imgEl);\n            this.renderer.setStyle(imgEl, 'width', '100px');\n\n            this._getOrientation(this.fileItem.file, (srcOrientation) => {\n\n                const img = new Image();\n                const reader = new FileReader();\n\n                reader.onload = (evt) => {\n\n                    img.onload = () => {\n                        const width = img.width,\n                            height = img.height,\n                            canvas = document.createElement('canvas'),\n                            ctx = canvas.getContext('2d')!;\n\n                        // set proper canvas dimensions before transform & export\n                        if (4 < srcOrientation && srcOrientation < 9) {\n                            canvas.width = height;\n                            canvas.height = width;\n                        } else {\n                            canvas.width = width;\n                            canvas.height = height;\n                        }\n\n                        // transform context before drawing image\n                        switch (srcOrientation) {\n                            case 2:\n                                ctx.transform(-1, 0, 0, 1, width, 0);\n                                break;\n                            case 3:\n                                ctx.transform(-1, 0, 0, -1, width, height);\n                                break;\n                            case 4:\n                                ctx.transform(1, 0, 0, -1, 0, height);\n                                break;\n                            case 5:\n                                ctx.transform(0, 1, 1, 0, 0, 0);\n                                break;\n                            case 6:\n                                ctx.transform(0, 1, -1, 0, height, 0);\n                                break;\n                            case 7:\n                                ctx.transform(0, -1, -1, 0, height, width);\n                                break;\n                            case 8:\n                                ctx.transform(0, -1, 1, 0, 0, width);\n                                break;\n                            default:\n                                break;\n                        }\n\n                        // draw image\n                        ctx.drawImage(img, 0, 0);\n\n                        this.renderer.setProperty(imgEl, 'src', canvas.toDataURL());\n                    };\n\n                    img.src = evt.target!['result'];\n                };\n                reader.readAsDataURL(this.fileItem.file);\n\n            });\n        }\n    }\n\n    /*\n    * getOrientation computes the real orientation of the image\n    *\n    */\n    _getOrientation(file, callback) {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n\n            const view = new DataView(event.target!['result']);\n\n            if (view.getUint16(0, false) !== 0xFFD8) return callback(-2);\n\n            const length = view.byteLength;\n            let offset = 2;\n\n            while (offset < length) {\n                const marker = view.getUint16(offset, false);\n                offset += 2;\n\n                if (marker === 0xFFE1) {\n                    if (view.getUint32(offset += 2, false) !== 0x45786966) {\n                        return callback(-1);\n                    }\n                    const little = view.getUint16(offset += 6, false) === 0x4949;\n                    offset += view.getUint32(offset + 4, little);\n                    const tags = view.getUint16(offset, little);\n                    offset += 2;\n\n                    for (let i = 0; i < tags; i++)\n                        if (view.getUint16(offset + (i * 12), little) === 0x0112)\n                            return callback(view.getUint16(offset + (i * 12) + 8, little));\n                } else if ((marker & 0xFF00) !== 0xFF00) break;\n                else offset += view.getUint16(offset, false);\n            }\n            return callback(-1);\n        };\n        reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n    };\n\n\n}\n"]}