{"version":3,"file":"fileItem.model.js","sourceRoot":"","sources":["../../src/services/fileItem.model.ts"],"names":[],"mappings":"AAKA;IAeI,kBAAmB,IAAU,EAAU,aAAoC,EAAY,MAAuB;QAA3F,SAAI,GAAJ,IAAI,CAAM;QAAU,kBAAa,GAAb,aAAa,CAAuB;QAAY,WAAM,GAAN,MAAM,CAAiB;QAZ9G,YAAO,GAAG,IAAI,CAAC;QAIf,aAAQ,GAAG,CAAC,CAAC;QAEb,aAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QAEpC,UAAK,GAAG,MAAM,CAAC;IAKf,CAAC;IAED,yBAAM,GAAN,UAAO,QAAwB,EAAE,OAAa;QAC1C,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;SAC9D;aAAM;YACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;SACjE;IACL,CAAC;IAED,yBAAM,GAAN;QACI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACnC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SAC3C;IACL,CAAC;IAED,yBAAM,GAAN;QACI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED,sCAAmB,GAAnB;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,8BAAW,GAAX,UAAY,QAAgB;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,6BAAU,GAAV;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;IACxB,CAAC;IAED,2BAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,4BAAS,GAAT;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAGL,eAAC;AAAD,CAAC,AAlFD,IAkFC","sourcesContent":["import { AbstractUploadService } from './abstractUpload.service';\nimport { NgxUploadLogger } from '../utils/logger.model';\nimport { Subscription } from 'rxjs';\nimport { UploadEndPoint } from '../utils/configuration.model';\n\nexport class FileItem {\n\n    uploadInProgress: boolean;\n    isReady = true;\n    isSuccess: boolean;\n    isCancel: boolean;\n    isError: boolean;\n    progress = 0;\n\n    formData: FormData = new FormData();\n\n    alias = 'file';\n\n    sub: Subscription;\n\n    constructor(public file: File, private uploadService: AbstractUploadService, protected logger: NgxUploadLogger) {\n    }\n\n    upload(endpoint: UploadEndPoint, options?: any) {\n        if (endpoint) {\n            this.uploadService.uploadFileItem(this, endpoint, options);\n        } else {\n            this.logger.error('You must define a UploadEndPoint object.');\n        }\n    }\n\n    cancel() {\n        this.logger.debug('upload cancel');\n        if (this.uploadInProgress) {\n            this.ɵonCancel();\n            this.uploadService.cancelFileItem(this);\n        }\n    }\n\n    remove() {\n        this.logger.debug('upload remove');\n        this.uploadService.removeFromQueue(this);\n    }\n\n    ɵonBeforeUploadItem() {\n        this.isReady = true;\n        this.uploadInProgress = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n    }\n\n    ɵonProgress(progress: number) {\n        this.isReady = false;\n        this.progress = progress;\n    }\n\n    ɵonSuccess() {\n        this.isReady = false;\n        this.uploadInProgress = false;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n    }\n\n    ɵonError() {\n        this.isReady = false;\n        this.uploadInProgress = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n    }\n\n    ɵonCancel() {\n        this.isReady = true;\n        this.uploadInProgress = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.sub.unsubscribe();\n    }\n\n\n}\n"]}