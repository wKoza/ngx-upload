{"version":3,"file":"logger.model.js","sourceRoot":"","sources":["../../src/utils/logger.model.ts"],"names":[],"mappings":"AACA;;GAEG;AACH;IAAA;IAgBA,CAAC;IAAD,sBAAC;AAAD,CAAC,AAhBD,IAgBC;;AAED,IAAM,IAAI,GAAG,cAAW,OAAA,SAAS,EAAT,CAAS,CAAC;;AAElC;;;GAGG;AACH;IACI,uBAAoB,QAAiB,EAAU,aAAoB;QAApB,8BAAA,EAAA,oBAAoB;QAA/C,aAAQ,GAAR,QAAQ,CAAS;QAAU,kBAAa,GAAb,aAAa,CAAO;IAAG,CAAC;IAEvE,2BAAG,GAAH;QAAI,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAU,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAAC,CAAC;IAErE,4BAAI,GAAJ;QAAK,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAU,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAAC,CAAC;IAEvE,4BAAI,GAAJ;QAAK,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAU,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAAC,CAAC;IAEvE,6BAAK,GAAL;QAAM,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAU,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAAC,CAAC;IAEzE,6BAAK,GAAL;QAAM,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAChB,IAAI,IAAI,CAAC,aAAa,EAAE;YAAE,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SAAE;IACzE,CAAC;IAEO,4CAAoB,GAA5B,UAA6B,IAAY,EAAE,IAAY;QACnD,IAAI,KAAK,GAAmB,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI,CAAC;QAE9E,gEAAgE;QAChE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YACd,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9D;QAED,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IACL,oBAAC;AAAD,CAAC,AAzBD,IAyBC;;AAED;;;GAGG;AACH;IAAA;IAWA,CAAC;IAVG,wBAAG,GAAH,cAAa,CAAC;IAEd,yBAAI,GAAJ,cAAc,CAAC;IAEf,yBAAI,GAAJ,cAAc,CAAC;IAEf,0BAAK,GAAL,cAAe,CAAC;IAEhB,0BAAK,GAAL,cAAe,CAAC;IAEpB,iBAAC;AAAD,CAAC,AAXD,IAWC","sourcesContent":["\n/**\n * Simple service for logging the module.\n */\nexport abstract class NgxUploadLogger {\n    /** Write a log message. */\n    abstract log(...args: any[]): void;\n\n    /** Write an information message. */\n    abstract info(...args: any[]): void;\n\n    /** Write a warning message. */\n    abstract warn(...args: any[]): void;\n\n    /** Write an error message. */\n    abstract error(...args: any[]): void;\n\n    /** Write a debug message. */\n    abstract debug(...args: any[]): void;\n\n}\n\nconst noop = (): any => undefined;\n\n/**\n * Default implementation of Logger that safely writes the message into the console.\n *\n */\nexport class ConsoleLogger implements NgxUploadLogger {\n    constructor(private _console: Console, private _debugEnabled = true) {}\n\n    log(...args: any[]): void { this._invokeConsoleMethod('log', args); }\n\n    info(...args: any[]): void { this._invokeConsoleMethod('info', args); }\n\n    warn(...args: any[]): void { this._invokeConsoleMethod('warn', args); }\n\n    error(...args: any[]): void { this._invokeConsoleMethod('error', args); }\n\n    debug(...args: any[]): void {\n        if (this._debugEnabled) { this._invokeConsoleMethod('debug', args); }\n    }\n\n    private _invokeConsoleMethod(type: string, args?: any[]): void {\n        let logFn: Function = (<any>this._console)[type] || this._console.log || noop;\n\n        // console methods in IE9 don't have 'apply' method, polyfill it\n        if (!logFn.apply) {\n            logFn = Function.prototype.bind.call(logFn, this._console);\n        }\n\n        logFn.apply(this._console, args);\n    }\n}\n\n/**\n * No op implementation of Logger.\n *\n */\nexport class NoOpLogger implements NgxUploadLogger {\n    log(): void {}\n\n    info(): void {}\n\n    warn(): void {}\n\n    error(): void {}\n\n    debug(): void {}\n\n}\n"]}